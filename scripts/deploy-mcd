#!/usr/bin/env bash

function jq_inplace {
  TMP=$(mktemp)
  jq "$1" > $TMP && mv $TMP "$2"
}

function sed_inplace {
  # sed's -i argument behaves differently on macOS, hence this hack
  sed -i.bak "$1" $2 && rm $2.bak
}

function deploy_mcd_dds {
  DDS=$LIB/dss-deploy-scripts
  cd $DDS

  export MCD_PAUSE_DELAY=1

  TMP=$(mktemp)

  # deploy migration contracts with local tub and gem
  TUB=$(cat $OUT/addresses.json | jq '.TUB')
  GEM=$(cat $OUT/addresses.json | jq '.GEM')
  GOV=$(cat $OUT/addresses.json | jq '.GOV')
  OMNIA_AMOUNT="1"
  DEPLOY=$DDS/config/testchain.json
  cat $DEPLOY | jq_inplace ".omniaAmount = $(echo $OMNIA_AMOUNT)" $DEPLOY
  cat $DEPLOY | jq_inplace ".migration = $(<$LIB/deploy-migration.json)" $DEPLOY
  cat $DEPLOY | jq_inplace ".migration.tub = $(echo $TUB)" $DEPLOY
  cat $DEPLOY | jq_inplace ".tokens.ETH.import.gem = $(echo $GEM)" $DEPLOY
  cat $DEPLOY | jq_inplace ".import.gov = $(echo $GOV)" $DEPLOY

  # change ds-pause delay to non-zero
  cat $DEPLOY | jq_inplace ".pauseDelay = $(echo $MCD_PAUSE_DELAY)" $DEPLOY

  # submodule contracts are deprecated; this nix command
  # installs all necessary dependencies
  ETH_RPC_URL="http://localhost:2000" nix run -f ./ -c dss-deploy testchain

  # uncomment below to add more ilks
  # DPA=$LIB/testchain-dss-deployment-scripts/contracts/dss-proxy-actions
  # cd $DPA/lib/dss-cdp-manager/lib/dss-deploy/
  # export DAPP_SOLC_VERSION=0.5.0
  # . bin/deploy-ilk-col1 B
  # . bin/deploy-ilk-eth B

  jq -S . $DDS/out/addresses.json > $OUT/addresses-mcd.json

  ls \
    $DDS/out/abi/* \
    # $DDS/contracts/dss-deploy/out/*.abi | \
    grep -v -E "(Fab|Dev|Test|Like|t_sol|lib_|src_)" | \
    xargs sh -c "sudo cp \$@ $OUT/mcd" placeholder
  # why the placeholder? see https://en.wikipedia.org/wiki/Xargs#Shell_trick

  # all done, go home!
  cd -
}
